###################
# Variable Definitions
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
###################

variable "boot_wait" {
  type    = string
  default = "2s"
}

variable "disk_size" {
  type    = string
  default = "120000"
}

variable "iso_checksum" {
  type    = string
}

variable "iso_url" {
  type    = string
}

variable "memsize" {
  type    = string
  default = "4096"
}

variable "numvcpus" {
  type    = string
  default = "2"
}

variable "vm_name" {
  type    = string
  default = "Win2019_17763"
}

variable "winrm_password" {
  type    = string
  default = "packer"
}

variable "winrm_username" {
  type    = string
  default = "Administrator"
}

variable "esxi_username" {
  type    = string
  default = "root"
}

variable "esxi_password" {
  type    = string
}

variable "esxi_insecure_connection" {
  type    = bool
  default = false
}

variable "esxi_host" {
  type    = string
}

variable "esxi_datastore" {
  type    = string
  default = "datastore1"
}

variable "esxi_network" {
  type    = string
  default = "VM Network"
}

###################
# Sources
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
###################

###################
# vmware-iso source (VMware Workstation)
# https://developer.hashicorp.com/packer/plugins/builders/vmware/iso
###################

source "vmware-iso" "win2019" {
  boot_command     = ["<spacebar>"]
  boot_wait        = "${var.boot_wait}"
  communicator     = "winrm"
  disk_size        = "${var.disk_size}"
  disk_type_id     = "0"
  floppy_files     = ["scripts/uefi/gui/autounattend.xml"]
  guest_os_type    = "windows9srv-64"
  headless         = false
  iso_checksum     = "${var.iso_checksum}"
  iso_url          = "${var.iso_url}"
  shutdown_command = "shutdown /s /t 5 /f /d p:4:1 /c \"Packer Shutdown\""
  shutdown_timeout = "30m"
  skip_compaction  = false
  vm_name          = "${var.vm_name}"
  vmx_data = {
    firmware            = "efi"
    memsize             = "${var.memsize}"
    numvcpus            = "${var.numvcpus}"
    "scsi0.virtualDev"  = "lsisas1068"
    "virtualHW.version" = "14"
  }
  winrm_insecure = true
  winrm_password = "${var.winrm_password}"
  winrm_timeout  = "4h"
  winrm_use_ssl  = true
  winrm_username = "${var.winrm_username}"
}

###################
# vsphere-iso source (VMware ESXi)
# https://developer.hashicorp.com/packer/plugins/builders/vsphere/vsphere-iso
###################

source "vsphere-iso" "win2019" {
  boot_command     = ["<spacebar>"]
  boot_wait        = "${var.boot_wait}"
  communicator     = "winrm"
  disk_size        = "${var.disk_size}"
  disk_type_id     = "0"
  floppy_files     = ["scripts/uefi/gui/autounattend.xml"]
  guest_os_type    = "windows2019srv_64Guest"
  headless         = false
  iso_checksum     = "${var.iso_checksum}"
  iso_url          = "${var.iso_url}"
  shutdown_command = "shutdown /s /t 5 /f /d p:4:1 /c \"Packer Shutdown\""
  shutdown_timeout = "30m"
  skip_compaction  = false

  CPUs      = "${var.numvcpus}"
  RAM       = "${var.memsize}"
  vm_name   = "${var.vm_name}"
  firmware  = "efi"

  disk_controller_type = "lsilogic-sas"
  storage {
    disk_size           = "${var.disk_size}"
    disk_eagerly_scrub  = true
  }

  network_adapters {
    network       = "${var.esxi_network}"
    network_card  = "vmxnet3"
  }

  vcenter_server      = "${var.esxi_host}"
  host                = "${var.esxi_host}"
  username            = "${var.esxi_username}"
  password            = "${var.esxi_password}"
  insecure_connection = "${var.esxi_insecure_connection}"
  datastore           = "${var.esxi_datastore}"

  winrm_insecure = true
  winrm_password = "${var.winrm_password}"
  winrm_timeout  = "4h"
  winrm_use_ssl  = true
  winrm_username = "${var.winrm_username}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.vmware-iso.autogenerated_1"]

  provisioner "powershell" {
    only         = ["vmware-iso"]
    pause_before = "1m0s"
    scripts      = ["scripts/vmware-tools.ps1"]
  }

  provisioner "powershell" {
    scripts = ["scripts/setup.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "30m"
  }

  provisioner "powershell" {
    scripts = ["scripts/win-update.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "30m"
  }

  provisioner "powershell" {
    scripts = ["scripts/win-update.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "30m"
  }

  provisioner "powershell" {
    pause_before = "1m0s"
    scripts      = ["scripts/cleanup.ps1"]
  }

}
